{"version":3,"sources":["Hooks/useFetchJobs.js","Component/Job.js","Component/JobsPagination.js","Component/SearchForm.js","App.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","param","target","prevParams","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ee7add5.chunk.js","sourcesContent":["import { useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ACTIONS = {\r\n    MAKE_REQUEST: \"make-request\",\r\n    GET_DATA: \"get-data\",\r\n    ERROR: \"error\",\r\n    UPDATE_HAS_NEXT_PAGE: \"update-has-next-page\",\r\n};\r\n\r\nconst BASE_URL =\r\n    \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case ACTIONS.MAKE_REQUEST:\r\n            return { loading: true, jobs: [] };\r\n        case ACTIONS.GET_DATA:\r\n            return { ...state, loading: false, jobs: action.payload.jobs };\r\n        case ACTIONS.ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n                jobs: [],\r\n            };\r\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n            return { ...state, hasNextPage: action.payload.hasNextPage };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default function useFetchJobs(params, page) {\r\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\r\n\r\n    useEffect(() => {\r\n        const cancelToken1 = axios.CancelToken.source();\r\n        dispatch({ type: ACTIONS.MAKE_REQUEST });\r\n        axios\r\n            .get(BASE_URL, {\r\n                cancelToken: cancelToken1.token,\r\n                params: { markdown: true, page: page, ...params },\r\n            })\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: ACTIONS.GET_DATA,\r\n                    payload: { jobs: res.data },\r\n                });\r\n            })\r\n            .catch((e) => {\r\n                if (axios.isCancel(e)) return;\r\n                dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\r\n            });\r\n\r\n        const cancelToken2 = axios.CancelToken.source();\r\n        axios\r\n            .get(BASE_URL, {\r\n                cancelToken: cancelToken2.token,\r\n                params: { markdown: true, page: page + 1, ...params },\r\n            })\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\r\n                    payload: { hasNextPage: res.data.length !== 0 },\r\n                });\r\n            })\r\n            .catch((e) => {\r\n                if (axios.isCancel(e)) return;\r\n                dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\r\n            });\r\n\r\n        return () => {\r\n            cancelToken1.cancel();\r\n            cancelToken2.cancel();\r\n        };\r\n    }, [params, page]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, Badge, Button, Collapse } from \"react-bootstrap\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nexport default function Job({ job }) {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <Card className=\"mb-3\">\r\n            <Card.Body>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <Card.Title>\r\n                            {job.title} -{\" \"}\r\n                            <span className=\"text-muted font-weight-light\">\r\n                                {job.company}\r\n                            </span>\r\n                        </Card.Title>\r\n                        <Card.Subtitle className=\"text-muted mb-2\">\r\n                            {new Date(job.created_at).toLocaleDateString()}\r\n                        </Card.Subtitle>\r\n                        <Badge variant=\"secondary\" className=\"mr-2\">\r\n                            {job.type}\r\n                        </Badge>\r\n                        <Badge variant=\"secondary\">{job.location}</Badge>\r\n                        <div style={{ wordBreak: \"break-all\" }}>\r\n                            <ReactMarkdown source={job.how_to_apply} />\r\n                        </div>\r\n                    </div>\r\n                    <img\r\n                        className=\"d-none d-md-block\"\r\n                        height=\"50\"\r\n                        alt={job.company}\r\n                        src={job.company_logo}\r\n                    />\r\n                </div>\r\n                <Card.Text>\r\n                    <Button\r\n                        onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n                        variant=\"primary\">\r\n                        {open ? \"Hide Details\" : \"View Details\"}\r\n                    </Button>\r\n                </Card.Text>\r\n                <Collapse in={open}>\r\n                    <div className=\"mt-4\">\r\n                        <ReactMarkdown source={job.description} />\r\n                    </div>\r\n                </Collapse>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\r\n    function adjustPage(amount) {\r\n        setPage((prevPage) => prevPage + amount);\r\n    }\r\n\r\n    return (\r\n        <Pagination>\r\n            {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n            {page !== 1 && (\r\n                <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>\r\n            )}\r\n            {page > 2 && <Pagination.Ellipsis />}\r\n            {page > 2 && (\r\n                <Pagination.Item onClick={() => adjustPage(-1)}>\r\n                    {page - 1}\r\n                </Pagination.Item>\r\n            )}\r\n            <Pagination.Item active>{page}</Pagination.Item>\r\n            {hasNextPage && (\r\n                <Pagination.Item onClick={() => adjustPage(1)}>\r\n                    {page + 1}\r\n                </Pagination.Item>\r\n            )}\r\n            {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n        </Pagination>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\n\r\nexport default function SearchForm({ params, onParamChange }) {\r\n    return (\r\n        <Form className=\"mb-4\">\r\n            <Form.Row className=\"align-items-end\">\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        onChange={onParamChange}\r\n                        value={params.description}\r\n                        name=\"description\"\r\n                        type=\"text\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Location</Form.Label>\r\n                    <Form.Control\r\n                        onChange={onParamChange}\r\n                        value={params.location}\r\n                        name=\"location\"\r\n                        type=\"text\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\r\n                    <Form.Check\r\n                        onChange={onParamChange}\r\n                        value={params.full_time}\r\n                        name=\"full_time\"\r\n                        id=\"full-time\"\r\n                        label=\"Only Full Time\"\r\n                        type=\"checkbox\"\r\n                        className=\"mb-2\"\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n        </Form>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport useFetchJobs from \"./Hooks/useFetchJobs\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Job from \"./Component/Job\";\r\nimport JobsPagination from \"./Component/JobsPagination\";\r\nimport SearchForm from \"./Component/SearchForm\";\r\n\r\nfunction App() {\r\n    const [params, setParams] = useState({});\r\n    const [page, setPage] = useState(1);\r\n    const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\r\n\r\n    function handleParamChange(e) {\r\n        const param = e.target.name;\r\n        const value = e.target.value;\r\n        setPage(1);\r\n        setParams((prevParams) => {\r\n            return { ...prevParams, [param]: value };\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-4\">\r\n            <h1 className=\"mb-4\">GitHub Jobs</h1>\r\n            <SearchForm params={params} onParamChange={handleParamChange} />\r\n            <JobsPagination\r\n                page={page}\r\n                setPage={setPage}\r\n                hasNextPage={hasNextPage}\r\n            />\r\n            {loading && <h1>Loading...</h1>}\r\n            {error && <h1>Error. Try Refreshing.</h1>}\r\n            {jobs.map((job) => {\r\n                return <Job key={job.id} job={job} />;\r\n            })}\r\n            <JobsPagination\r\n                page={page}\r\n                setPage={setPage}\r\n                hasNextPage={hasNextPage}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}